webpackJsonp([10,40],{1:function(t,e){"use strict";t.exports={mounted:function(){this.$nextTick(function(){var t=document.querySelectorAll("code");if(t.length>0)for(var e=0;e<t.length;e++)hljs.highlightBlock(t[e])})}}},2:function(t,e,n){var a,o;a=n(1);var r=n(3);o=a=a||{},"object"!=typeof a.default&&"function"!=typeof a.default||(o=a=a.default),"function"==typeof o&&(o=o.options),o.render=r.render,o.staticRenderFns=r.staticRenderFns,t.exports=a},3:function(t,e){t.exports={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div")},staticRenderFns:[]}},43:function(t,e,n){"use strict";function a(t){return t&&t.__esModule?t:{default:t}}var o=n(2),r=a(o);t.exports={extends:r.default}},107:function(t,e,n){var a,o;a=n(43);var r=n(158);o=a=a||{},"object"!=typeof a.default&&"function"!=typeof a.default||(o=a=a.default),"function"==typeof o&&(o=o.options),o.render=r.render,o.staticRenderFns=r.staticRenderFns,t.exports=a},158:function(t,e){t.exports={render:function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"page article"},[n("h2",{staticClass:"title"},[t._v("React学习笔记之一：初入React世界")]),t._v(" "),t._m(0),t._v(" "),n("footer",[t._v("2017年10月29日")]),t._v(" "),n("comments")],1)},staticRenderFns:[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[n("h3",{staticClass:"title"},[t._v("React简介")]),t._v(" "),n("p",[t._v("React是Facebook在2013年开源的JavaScript库。React将用户界面抽象成一个个组件，开发者通过组合这些组件来构建功能丰富的页面。React并不是完整的MVC/MVVM框架，专注于提供清晰的简洁的视图层解决方案。")]),t._v(" "),n("p",[n("strong",[t._v("Virtual DOM")]),t._v("：在前端开发中，性能消耗最大的就是DOM操作。React将真实DOM树转换成JavaScript对象树。在每次数据更新之后，重新计算Virtual DOM，并和上一次的Virtual DOM做对比，对发生变化的部分做批量更新。（也可以使用"),n("strong",[t._v("shouldComponentUpdate")]),t._v("生命周期回调，减少不必要的对比过程，保证性能。）")]),t._v(" "),n("h3",{staticClass:"title"},[t._v("JSX语法")]),t._v(" "),n("p",[t._v("JSX将HTML语法直接加入到JavaScript代码中，再通过翻译器转换到纯JavaScript后由浏览器执行。JSX并不是强制需要的，只是让组件的结构更直观。")]),t._v(" "),n("p",[n("strong",[t._v("定义标签时，只允许被一个标签包裹")]),t._v("：最外层只能有一个标签。")]),t._v(" "),n("p",[n("strong",[t._v("标签一定要闭合")]),t._v("：所有标签都必须闭合，自闭合标签img等也要遵循同样规则，可以根据是否有子组件来决定闭合方式。")]),t._v(" "),n("p",[n("strong",[t._v("标签首字母小写对应DOM元素；首字母大写对应自定义组件元素。")])]),t._v(" "),n("p",[n("strong",[t._v("可以通过命名空间的方式使用组件元素")]),t._v("，以解决组件同名冲突的问题：")]),t._v(" "),n("pre",[n("code",[t._v("const App = () => {\n    <MUI.RaisedButton label='default' />\n}")])]),t._v(" "),n("p",[n("strong",[t._v("在一个组件的子元素位置使用注释需要用{}包起来")]),t._v("：")]),t._v(" "),n("pre",[n("code",[t._v("const App = {\n    <Nav>\n        { /* 节点注释 */ }\n        <Person\n            /* 多行\n                注释 */\n        name = '--'\n        />\n    </Nav>\n}")])]),t._v(" "),n("p",[n("strong",[t._v("DOM元素属性class转换成className；for转换成htmlFor")]),t._v("，在JavaScript中这两个是关键词。")]),t._v(" "),n("p",[n("strong",[t._v("在写自定义属性的时候，都由标准写法改为小驼峰写法。")])]),t._v(" "),n("p",[n("strong",[t._v("可以使用ES6的新语法展开属性：")])]),t._v(" "),n("pre",[n("code",[t._v("const data = { name: 'foo', value: 'bar' }\nconst component = <Component name = {data.name} value={data.value} />\n// es6展开\nconst component = <Component {...data} />")])]),t._v(" "),n("p",[n("strong",[t._v("在JSX中往DOM元素传入自定义属性，需要使用data-前缀，不然不会渲染")]),t._v("，自定义组件元素则支持任意属性。")]),t._v(" "),n("h3",{staticClass:"title"},[t._v("React组件")])])}]}}});