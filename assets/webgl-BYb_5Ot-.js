function s(e,a,t){const r=i(e,a,t);return r?(e.useProgram(r),e.program=r,!0):(console.log("Failed to create program"),!1)}function i(e,a,t){const r=d(e,e.VERTEX_SHADER,a),n=d(e,e.FRAGMENT_SHADER,t);if(!r||!n)return null;const o=e.createProgram();if(!o)return null;if(e.attachShader(o,r),e.attachShader(o,n),e.linkProgram(o),!e.getProgramParameter(o,e.LINK_STATUS)){const c=e.getProgramInfoLog(o);return console.log("Failed to link program: "+c),e.deleteProgram(o),e.deleteShader(n),e.deleteShader(r),null}return o}function d(e,a,t){const r=e.createShader(a);if(r==null)return console.log("unable to create shader"),null;if(e.shaderSource(r,t),e.compileShader(r),!e.getShaderParameter(r,e.COMPILE_STATUS)){const o=e.getShaderInfoLog(r);return console.log("Failed to compile shader: "+o),e.deleteShader(r),null}return r}export{s as i};
